from array import *
import sympy as sym

#1. Дан массив с целыми числами. Вывести в консоль количество положительных и отрицательных чисел в нем

def task_1(data):
    sum_negative = 0
    sum_positive = 0
    for i in range(0, len(data)):
        if data[i] < 0:
            sum_negative += 1
        else:
            sum_positive += 1
    return sum_negative, sum_positive

#2. Дан массив с целыми числами. Вывести в консоль сумму элементов с четными индексами
def task_2(data):
    sum = 0
    for i in range(0, len(data)):
        if i % 2 == 0:
            sum += data[i]
        else:
            pass
    return sum

#3. Дан массив с целыми числами. Вывести в консоль сумму четных элементов (четные значения)
def task_3(data):
    sum = 0
    for i in range(0, len(data)):
        if data[i] % 2 == 0:
            sum += data[i]
        else:
            pass
    return sum

#4. Дан массив с целыми числами. Вывести в консоль наибольшее из них
#5. Дан массив с целыми числами. Вывести в консоль наиболее часто встречающееся. Если таких несколько, то вывести наибольшее из них, если повторяющихся нет, вывести соответствующее сообщение.

def task_5(data):
    d = {}
    for i in range(0, len(data)):
        if data.count(data[i]) != 1:
            d[data[i]] = data.count(data[i])
        else:
            pass
    if not d:
        return print('Повторящихся элементов в массиве нет')
    else:
        return print (f'Число {d.get(max(d.values()))} входит {max(d.values())} раз в массив') # не допилил сравнение ключей, если количество вхождений одинаково

#6. Дан двумерный массив 10х10 с целыми числами. Вывести в консоль все числа по диагонали от [0][0] до [10][10]
def task_6(data):
    for i in range(0, len(data)):
        print(data[i][i], end = ' ')
    return 0

#7. Дан двумерный массив 10х10 с целыми числами. Вывести в консоль все числа по диагонали от [0][10] до [10][0]
def task_7(data):
    for i in range(0, len(data)):
        print(data[i][len(data) - 1 - i], end = ' ')
    return 0

#8. Дан двумерный массив 5х5 с целыми числами. Посчитать суммы чисел в каждом столбце и вывести наибольшую из них
def task_8(data):
    list = []
    for i in range(0, len(data)):
        sum = 0
        for j in range(0, len(data)):
            sum += data[j][i]
        list.append(sum)
    return list.index(max(list)), max(list)


def main():
    data = array('i', [2, 2, 2, 5, 4, 0, 8, -4, -8, 0, 2, 4, 4, 4, 3, 3, 3, 3])
    print(f'Количество отрицательных чисел = {task_1(data)[0]}\nКоличество положительных чисел = {task_1(data)[1]}')  #до этого задания не знал что возможно так обращаться к значениям, которые вовращает функция ))
    print(f'Сумма элементов массива c четным индексом = {task_2(data)}')
    print(f'Сумма четных элементов массива = {task_3(data)}')
    print(f'Наибольшое значение в массиве = {max(data)}')
    task_5(data)
    data_6 = [[1, 1, 1, 1, 1, 1, 1, 1, 1, 10],
            [1, 2, 1, 1, 1, 1, 1, 1, 9, 1],
            [1, 1, 3, 1, 1, 1, 1, 8, 1, 1],
            [1, 1, 1, 4, 1, 1, 7, 1, 1, 1],
            [1, 1, 1, 1, 5, 6, 1, 1, 1, 1],
            [1, 1, 1, 1, 5, 5, 1, 1, 1, 1],
            [1, 1, 1, 4, 1, 1, 4, 1, 1, 1],
            [1, 1, 3, 1, 1, 1, 1, 3, 1, 1],
            [1, 2, 1, 1, 1, 1, 1, 1, 2, 1],
            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
    task_6(data_6)
    print()
    task_7(data_6)
    print()
    data_8 = [[1, 1, 1, 1, 1],
            [1, 15, 1, 55, 1],
            [1, 2, 20, 1, 1],
            [1, 1, 1, 4, 1],
            [2, 1, 1, 1, 52]]
    print(f'Максимальная сумма в столбце под номером {task_8(data_8)[0]} и она = {task_8(data_8)[1]}')

if __name__ == '__main__':
    main()